"""Geometry View Components - Result Display"""
import tkinter as tk
from tkinter import messagebox

class GeometryResultDisplay:
    """Qu·∫£n l√Ω hi·ªÉn th·ªã k·∫øt qu·∫£ v√† copy clipboard"""
    
    def __init__(self, parent_view):
        self.parent = parent_view
        self.entry_tong = None
        self.btn_copy_result = None
    
    def setup_result_display(self, main_container, entry_tong):
        """Thi·∫øt l·∫≠p hi·ªÉn th·ªã k·∫øt qu·∫£"""
        self.entry_tong = entry_tong
        
        # T·∫°o n√∫t copy k·∫øt qu·∫£ (·∫©n ban ƒë·∫ßu)
        self.btn_copy_result = tk.Button(
            main_container, text="üìã Copy K·∫øt Qu·∫£",
            command=self._copy_result,
            bg="#9C27B0", fg="white", font=("Arial", 9, "bold"),
            width=20
        )
        self.btn_copy_result.grid(row=10, column=0, sticky="w", padx=0, pady=5)
        self.btn_copy_result.grid_remove()  # ·∫®n ban ƒë·∫ßu
    
    def show_single_line_result(self, result_text: str):
        """Hi·ªÉn th·ªã duy nh·∫•t 1 d√≤ng k·∫øt qu·∫£ m√£ h√≥a v·ªõi font Flexio Fx799VN"""
        if not self.entry_tong:
            return
        
        # X√≥a to√†n b·ªô v√† ch√®n ƒë√∫ng 1 d√≤ng
        self.entry_tong.delete(1.0, tk.END)
        one_line = (result_text or "").strip().splitlines()[0] if result_text else ""
        self.entry_tong.insert(tk.END, one_line)
        
        # Thi·∫øt l·∫≠p font Flexio Fx799VN n·∫øu c√≥, size 11, bold
        try:
            self.entry_tong.config(font=("Flexio Fx799VN", 11, "bold"), fg="#000000", bg="#F8F9FA")
        except Exception:
            # Fallback gi·ªØ nguy√™n n·∫øu font kh√¥ng c√≥
            self.entry_tong.config(font=("Courier New", 11, "bold"), fg="#000000", bg="#F8F9FA")
    
    def update_result_display(self, message):
        """C·∫≠p nh·∫≠t hi·ªÉn th·ªã k·∫øt qu·∫£ v·ªõi m√†u s·∫Øc (d√πng cho th√¥ng b√°o nhi·ªÅu d√≤ng)"""
        if not self.entry_tong:
            return
        
        self.entry_tong.delete(1.0, tk.END)
        self.entry_tong.insert(tk.END, message)
        
        # Gi·ªØ font m·∫∑c ƒë·ªãnh cho th√¥ng b√°o
        try:
            self.entry_tong.config(font=("Courier New", 9), fg="black")
        except Exception:
            pass
        
        # M√†u s·∫Øc theo lo·∫°i th√¥ng b√°o
        if "L·ªói" in message or "l·ªói" in message:
            self.entry_tong.config(bg="#FFEBEE", fg="#D32F2F")
        elif "ƒê√£ import" in message or "Ho√†n th√†nh" in message:
            self.entry_tong.config(bg="#E8F5E8", fg="#388E3C")
        elif "ƒêang x·ª≠ l√Ω" in message:
            self.entry_tong.config(bg="#FFF3E0", fg="#F57C00")
        else:
            self.entry_tong.config(bg="#F8F9FA", fg="#2E86AB")
    
    def show_ready_message(self):
        """Hi·ªÉn th√¥ng b√°o s·∫µn s√†ng"""
        if not self.entry_tong:
            return
        
        if self.parent.geometry_service:
            message = " "
        else:
            message = "‚ö†Ô∏è GeometryService kh√¥ng kh·ªüi t·∫°o ƒë∆∞·ª£c.\nVui l√≤ng ki·ªÉm tra c√†i ƒë·∫∑t!"
        
        self.entry_tong.insert(tk.END, message)
    
    def _copy_result(self):
        """Copy k·∫øt qu·∫£ m√£ h√≥a v√†o clipboard"""
        try:
            if not self.entry_tong:
                messagebox.showwarning("C·∫£nh b√°o", "Kh√¥ng c√≥ k·∫øt qu·∫£ ƒë·ªÉ copy!")
                return
            
            result_text = self.entry_tong.get(1.0, tk.END).strip()
            if result_text:
                self.parent.window.clipboard_clear()
                self.parent.window.clipboard_append(result_text)
                messagebox.showinfo("ƒê√£ copy", f"ƒê√£ copy k·∫øt qu·∫£ v√†o clipboard:\n\n{result_text}")
            else:
                messagebox.showwarning("C·∫£nh b√°o", "Kh√¥ng c√≥ k·∫øt qu·∫£ ƒë·ªÉ copy!")
        except Exception as e:
            messagebox.showerror("L·ªói Copy", f"L·ªói copy k·∫øt qu·∫£: {str(e)}")
    
    def show_copy_button(self):
        """Hi·ªán th·ªã n√∫t copy khi c√≥ k·∫øt qu·∫£"""
        if self.btn_copy_result:
            self.btn_copy_result.grid()
    
    def hide_copy_button(self):
        """An n√∫t copy khi kh√¥ng c√≥ k·∫øt qu·∫£"""
        if self.btn_copy_result:
            self.btn_copy_result.grid_remove()
    
    def clear_display(self):
        """X√≥a hi·ªÉn th·ªã"""
        if self.entry_tong:
            self.entry_tong.delete(1.0, tk.END)