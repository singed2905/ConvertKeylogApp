"""Equation View Components - UI Layout Manager"""
import tkinter as tk
from tkinter import ttk

class EquationUIManager:
    """Qu·∫£n l√Ω layout v√† giao di·ªán cho Equation View"""
    
    def __init__(self, parent_view):
        self.parent = parent_view
        self.window = parent_view.window
        self.config = parent_view.config
    
    def setup_main_layout(self):
        """Thi·∫øt l·∫≠p layout ch√≠nh"""
        # Frame ch√≠nh
        main_frame = tk.Frame(self.window, bg="#F5F5F5")
        main_frame.pack(fill="both", expand=True, padx=20, pady=15)
        
        # Ti√™u ƒë·ªÅ
        self._create_title(main_frame)
        
        # Khung thi·∫øt l·∫≠p tham s·ªë
        control_frame = self._create_control_frame(main_frame)
        
        # Khung h∆∞·ªõng d·∫´n
        guide_frame = self._create_guide_frame(main_frame)
        
        # Khung nh·∫≠p li·ªáu
        input_frame = self._create_input_frame(main_frame)
        
        # Khung k·∫øt qu·∫£ m√£ h√≥a
        result_frame = self._create_result_frame(main_frame)
        
        # Khung k·∫øt qu·∫£ nghi·ªám
        solution_frame = self._create_solution_frame(main_frame)
        
        # Khung k·∫øt qu·∫£ t·ªïng
        final_frame = self._create_final_frame(main_frame)
        
        # Khung n√∫t ch·ª©c nƒÉng
        button_frame = self._create_button_frame(main_frame)
        
        # Th√¥ng b√°o tr·∫°ng th√°i
        status_label = self._create_status_label(main_frame)
        
        # N√∫t ƒë√≥ng v√† footer
        self._create_footer(main_frame)
        
        return {
            'main_frame': main_frame,
            'control_frame': control_frame,
            'guide_frame': guide_frame,
            'input_frame': input_frame,
            'result_frame': result_frame,
            'solution_frame': solution_frame,
            'final_frame': final_frame,
            'button_frame': button_frame,
            'status_label': status_label
        }
    
    def _create_title(self, parent):
        """T·∫°o ti√™u ƒë·ªÅ"""
        title_label = tk.Label(
            parent,
            text="üß† EQUATION MODE v2.0 - GI·∫¢I H·ªÜ PH∆Ø∆†NG TR√åNH",
            font=("Arial", 18, "bold"),
            bg="#F5F5F5",
            fg="#2E7D32"
        )
        title_label.pack(pady=(0, 15))
        return title_label
    
    def _create_control_frame(self, parent):
        """T·∫°o khung ƒëi·ªÅu khi·ªÉn tham s·ªë"""
        control_frame = tk.LabelFrame(
            parent,
            text="‚öôÔ∏è THI·∫æ4T L·∫¨P PH∆Ø∆†NG TR√åNH",
            font=("Arial", 11, "bold"),
            bg="#FFFFFF",
            fg="#1B5299",
            bd=2,
            relief="groove"
        )
        control_frame.pack(fill="x", pady=10, padx=10)
        
        self._setup_control_widgets(control_frame)
        return control_frame
    
    def _setup_control_widgets(self, control_frame):
        """Thi·∫øt l·∫≠p c√°c widget trong khung ƒëi·ªÅu khi·ªÉn"""
        # D√≤ng 1: Ch·ªçn s·ªë ·∫©n
        row1 = tk.Frame(control_frame, bg="#FFFFFF")
        row1.pack(fill="x", padx=15, pady=10)
        
        tk.Label(
            row1,
            text="S·ªë ·∫©n:",
            font=("Arial", 10, "bold"),
            bg="#FFFFFF",
            fg="#333333",
            width=12
        ).pack(side="left")
        
        so_an_menu = ttk.Combobox(
            row1,
            textvariable=self.parent.so_an_var,
            values=["2", "3", "4"],
            state="readonly",
            width=15,
            font=("Arial", 10)
        )
        so_an_menu.pack(side="left", padx=5)
        so_an_menu.bind("<<ComboboxSelected>>", self.parent._on_so_an_changed)
        
        # D√≤ng 2: Ch·ªçn phi√™n b·∫£n
        row2 = tk.Frame(control_frame, bg="#FFFFFF")
        row2.pack(fill="x", padx=15, pady=10)
        
        tk.Label(
            row2,
            text="Phi√™n b·∫£n m√°y:",
            font=("Arial", 10, "bold"),
            bg="#FFFFFF",
            fg="#333333",
            width=12
        ).pack(side="left")
        
        phien_ban_menu = ttk.Combobox(
            row2,
            textvariable=self.parent.phien_ban_var,
            values=self.parent.phien_ban_list,
            state="readonly",
            width=15,
            font=("Arial", 10)
        )
        phien_ban_menu.pack(side="left", padx=5)
        phien_ban_menu.bind("<<ComboboxSelected>>", self.parent._on_phien_ban_changed)
        
        # Config status
        config_status = "Config: ‚úÖ Loaded" if self.config else "Config: ‚ö†Ô∏è Fallback"
        tk.Label(
            row2,
            text=config_status,
            font=("Arial", 8),
            bg="#FFFFFF",
            fg="#666666"
        ).pack(side="right", padx=20)
    
    def _create_guide_frame(self, parent):
        """T·∫°o khung h∆∞·ªõng d·∫´n"""
        guide_frame = tk.LabelFrame(
            parent,
            text="üí° H∆Ø·ªöNG D·∫ÆN NH·∫¨P LI·ªÜU",
            font=("Arial", 10, "bold"),
            bg="#E3F2FD",
            fg="#1565C0",
            bd=1,
            relief="solid"
        )
        guide_frame.pack(fill="x", pady=5, padx=10)
        
        guide_text = (
            "‚Ä¢ H·ªó tr·ª£ bi·ªÉu th·ª©c: sqrt(5), sin(pi/2), 1/2, 2^3, log(10), v.v.\n"
            "‚Ä¢ Nh·∫≠p h·ªá s·ªë c√°ch nhau b·∫±ng d·∫•u ph·∫©y\n"
            "‚Ä¢ √î tr·ªëng s·∫Ω t·ª± ƒë·ªông ƒëi·ªÅn s·ªë 0"
        )
        
        guide_label = tk.Label(
            guide_frame,
            text=guide_text,
            font=("Arial", 9),
            bg="#E3F2FD",
            fg="#333333",
            justify="left"
        )
        guide_label.pack(padx=10, pady=8)
        
        return guide_frame
    
    def _create_input_frame(self, parent):
        """T·∫°o khung nh·∫≠p li·ªáu"""
        input_frame = tk.LabelFrame(
            parent,
            text="üìù NH·∫¨P H·ªÜ S·ªê PH∆Ø∆†NG TR√åNH",
            font=("Arial", 11, "bold"),
            bg="#FFFFFF",
            fg="#1B5299",
            bd=2,
            relief="groove"
        )
        input_frame.pack(fill="x", pady=10, padx=10)
        return input_frame
    
    def _create_result_frame(self, parent):
        """T·∫°o khung k·∫øt qu·∫£ m√£ h√≥a"""
        result_frame = tk.LabelFrame(
            parent,
            text="üîê K·∫æT QU·∫¢ M√É H√ìA",
            font=("Arial", 11, "bold"),
            bg="#FFFFFF",
            fg="#7B1FA2",
            bd=2,
            relief="groove"
        )
        result_frame.pack(fill="x", pady=10, padx=10)
        return result_frame
    
    def _create_solution_frame(self, parent):
        """T·∫°o khung k·∫øt qu·∫£ nghi·ªám"""
        solution_frame = tk.LabelFrame(
            parent,
            text="üéØ K·∫æT QU·∫¢ NGHI·ªÜM",
            font=("Arial", 11, "bold"),
            bg="#FFFFFF",
            fg="#D35400",
            bd=2,
            relief="groove"
        )
        solution_frame.pack(fill="x", pady=10, padx=10)
        
        solution_entry = tk.Entry(
            solution_frame,
            width=80,
            font=("Arial", 10),
            justify="center"
        )
        solution_entry.pack(padx=15, pady=12, fill="x")
        solution_entry.insert(0, "Ch∆∞a c√≥ k·∫øt qu·∫£ nghi·ªám")
        solution_entry.config(bg="#FFF9E6", fg="#FF6F00")
        
        return solution_frame, solution_entry
    
    def _create_final_frame(self, parent):
        """T·∫°o khung k·∫øt qu·∫£ t·ªïng"""
        final_frame = tk.LabelFrame(
            parent,
            text="üì¶ K·∫æT QU·∫¢ T·ªîNG (CHO M√ÅY T√çNH)",
            font=("Arial", 11, "bold"),
            bg="#FFFFFF",
            fg="#2E7D32",
            bd=2,
            relief="groove"
        )
        final_frame.pack(fill="x", pady=10, padx=10)
        
        final_entry = tk.Entry(
            final_frame,
            width=80,
            font=("Courier New", 9),
            justify="center"
        )
        final_entry.pack(padx=15, pady=12, fill="x")
        
        # Hi·ªÉn th·ªã config info trong k·∫øt qu·∫£ t·ªïng
        config_info = "Config loaded successfully" if self.config else "Using fallback config"
        final_entry.insert(0, f"Equation Mode v2.0 - {config_info}")
        final_entry.config(bg="#F1F8E9")
        
        return final_frame, final_entry
    
    def _create_button_frame(self, parent):
        """T·∫°o khung n√∫t ch·ª©c nƒÉng"""
        button_frame = tk.Frame(parent, bg="#F5F5F5")
        button_frame.pack(fill="x", pady=20)
        return button_frame
    
    def _create_status_label(self, parent):
        """T·∫°o label tr·∫°ng th√°i"""
        status_label = tk.Label(
            parent,
            text="üü¢ S·∫µn s√†ng nh·∫≠p li·ªáu v√† gi·∫£i h·ªá ph∆∞∆°ng tr√¨nh",
            font=("Arial", 10, "bold"),
            bg="#F5F5F5",
            fg="#2E7D32"
        )
        status_label.pack(pady=10)
        return status_label
    
    def _create_footer(self, parent):
        """T·∫°o footer v√† n√∫t ƒë√≥ng"""
        # N√∫t ƒë√≥ng
        close_btn = tk.Button(
            parent,
            text="ƒê√≥ng",
            command=self.window.destroy,
            bg="#F44336",
            fg="white",
            font=("Arial", 10, "bold"),
            width=15,
            height=1
        )
        close_btn.pack(pady=10)
        
        # Footer
        footer_label = tk.Label(
            parent,
            text="Phi√™n b·∫£n: v2.0 Gi·∫£i nghi·ªám th·ª±c ‚Ä¢ H·ªó tr·ª£ bi·ªÉu th·ª©c ph·ª©c t·∫°p ‚Ä¢ Config-driven",
            font=("Arial", 8),
            bg="#F5F5F5",
            fg="#666666"
        )
        footer_label.pack(side="bottom", pady=5)
        
        return close_btn, footer_label